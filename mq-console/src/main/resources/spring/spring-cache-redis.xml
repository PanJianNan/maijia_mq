<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">

    <!-- Jedis PoolConfig -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <!-- 最大等待时间 -->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!-- 在获取连接时检查有效性 -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <!-- 在连接返回时检查有效性 -->
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
        <!-- 在连接空闲时检查有效性 -->
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
    </bean>

    <!-- Redis SentinelConfig-->
    <bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="mymaster"/>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel1.host}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.sentinel1.port}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel2.host}"></constructor-arg>
                    <constructor-arg name="port" value="${redis.sentinel2.port}"></constructor-arg>
                </bean>
            </set>
        </property>
    </bean>

    <!-- Jedis ConnectionFactory -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"></constructor-arg>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
    </bean>

    <!-- Redis Template -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <!-- 开启缓存注解 -->
    <cache:annotation-driven/>

    <!-- 自定义CacheManager，实现缓存有效期可配置 -->
    <bean name="cacheManager" class="com.maijia.mq.cahce.redis.ExtendedRedisCacheManager">
        <!-- 注入redisTemplate -->
        <constructor-arg name="redisOperations" ref="redisTemplate"/>
        <!-- 缓存名字，一般的工程只需要配置一项 -->
        <constructor-arg name="cacheNames">
            <set>
                <value>maijia_mq</value>
            </set>
        </constructor-arg>
        <!-- 默认缓存名字 -->
        <property name="defaultCacheName" value="maijia_mq"/>
        <!-- 是否在容器启动时初始化 -->
        <property name="loadRemoteCachesOnStartup" value="true"/>
        <!-- 是否使用前缀 -->
        <property name="usePrefix" value="true"/>
        <!-- 前缀命名，仅当usePrefix为true时才生效 -->
        <property name="cachePrefix">
            <bean class="org.springframework.data.redis.cache.DefaultRedisCachePrefix">
                <constructor-arg name="delimiter" value=":"/>
            </bean>
        </property>
        <!-- 缓存名字和有效期的分隔符 -->
        <property name="separator" value="#"/>
        <!-- 默认有效期1h；如果不配置那么就是0，表示永不过期 -->
        <property name="defaultExpiration" value="3600"/>
        <!-- 是否事务提交 -->
        <property name="transactionAware" value="false"/>
        <!-- 多个缓存有效期，一般的工程可以省略此项 -->
        <property name="expires">
            <map>
                <entry key="maijia_mq" value="3600"/>
            </map>
        </property>
    </bean>

    <bean id="redisCacheImpl" class="com.maijia.mq.cahce.redis.RedisCacheImpl">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

</beans>